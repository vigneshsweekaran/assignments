---
- name: Install Gitlab runner
  hosts: all
  remote_user: ubuntu
  become: true

  tasks:
    - name: Remove old docker
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: absent
      vars:
        packages:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc

    - name: Update all packages to their latest version
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: Installing dependency packages
      apt:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release

    - name: Add Docker apt key.
      ansible.builtin.get_url:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        dest: /etc/apt/trusted.gpg.d/docker.asc
        mode: '0644'
        force: true

    - name: Add docker repo
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install docker
      apt:
        name:
          - docker-ce 
          - docker-ce-cli 
          - containerd.io
        state: present

    - name: Install gitlab runner
      shell: |
        curl -LJO https://gitlab-runner-downloads.s3.amazonaws.com/"${runner_version}"/deb/gitlab-runner_amd64.deb
        dpkg -i gitlab-runner_amd64.deb
      args:
        creates: /usr/bin/gitlab-runner

    - name: Register gitlab docker runner
      command: |
        gitlab-runner register \
        --non-interactive \
        --url "https://gitlab.com/" \
        --registration-token "${runner_token}" \
        --executor "docker" \
        --docker-image alpine:latest \
        --description "test-docker-runner" \
        --tag-list "${runner_tag}" \
        --run-untagged="false" \
        --locked="true"